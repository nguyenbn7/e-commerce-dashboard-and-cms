// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Store {
  id         Int         @id @default(autoincrement())
  name       String      @db.VarChar(255)
  userId     String      @map("user_id") @db.VarChar(255)
  createdAt  DateTime    @default(now()) @map("created_at")
  updatedAt  DateTime    @updatedAt @map("updated_at")
  billboards Billboard[] @relation("store_billboard")
  Category   Category[]  @relation("store_category")
  Size       Size[]      @relation("store_size")
  Color      Color[]     @relation("store_color")

  @@index([userId])
  @@map("store")
}

model Billboard {
  id        Int        @id @default(autoincrement())
  label     String     @db.VarChar(255)
  imageUrl  String     @db.VarChar(255)
  createdAt DateTime   @default(now()) @map("created_at")
  updatedAt DateTime   @updatedAt @map("updated_at")
  storeId   Int        @map("store_id")
  store     Store      @relation("store_billboard", fields: [storeId], references: [id])
  Category  Category[] @relation("category_billboard")

  @@index([storeId])
  @@map("billboard")
}

model Category {
  id          Int       @id @default(autoincrement())
  storeId     Int       @map("store_id")
  store       Store     @relation("store_category", fields: [storeId], references: [id])
  billboardId Int       @map("billboard_id")
  billboard   Billboard @relation("category_billboard", fields: [billboardId], references: [id])
  name        String    @db.VarChar(255)
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime  @updatedAt @map("updated_at")

  @@index([storeId])
  @@index([billboardId])
  @@map("category")
}

model Size {
  id        Int      @id @default(autoincrement())
  storeId   Int      @map("store_id")
  store     Store    @relation("store_size", fields: [storeId], references: [id])
  name      String   @db.VarChar(255)
  value     String   @db.VarChar(255)
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@index([storeId])
  @@map("size")
}

model Color {
  id        Int      @id @default(autoincrement())
  storeId   Int      @map("store_id")
  store     Store    @relation("store_color", fields: [storeId], references: [id])
  name      String   @db.VarChar(255)
  value     String   @db.VarChar(255)
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@index([storeId])
  @@map("color")
}
